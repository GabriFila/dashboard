# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js Test, Build and Push to DockerHub

on: 
  push:
    tags:
        - '*'
    branches:
      - master
  pull_request:
  
jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: "Install Liqodash Dependencies"
      run: npm install

    - name: "Launch Liqodash Tests"
      run: npm test
    
    - name: Coveralls
      if: success()
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Publish Docker (Non-master branch)
      uses: docker/build-push-action@v1
      if: github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/v')
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: liqo/dashboard-ci
        tags: latest, ${{ github.sha }}
      
    - name: Publish Docker (Master Branch)
      uses: docker/build-push-action@v1
      if: github.ref == 'refs/heads/master'
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: liqo/dashboard
        tags: latest, ${{ github.sha }}
        
    - name: Get the tag for version (Release)
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      if: startsWith(github.ref, 'refs/tags/v')
    
    - name: Build and Publish Laboratory-Operator image (Repository)
      uses: docker/build-push-action@v1
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: liqo/dashboard
        tags: latest, ${{ steps.get_version.outputs.VERSION }}

  release:
      runs-on: ubuntu-latest
      needs: [build]
      steps:
        - uses: 8398a7/action-slack@v2
          with:
            status: ${{ job.status }}
            author_name: Integration Test # default: 8398a7@action-slack
          env:
            GITHUB_TOKEN: ${{ secrets.CI_TOKEN }} # required
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
          if: always() && github.ref == 'refs/heads/master' # Pick up events even if the job fails or is canceled.
        
